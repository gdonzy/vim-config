set nu
"set go= "不要图形按钮
"color asmanian2  "设置背景主题
set guifont=Courier_New:h10:cANSI "设置字体
syntax on   "语法高亮
autocmd InsertLeave * se nocul "用浅色高亮当前行
autocmd InsertEnter * se cul "用浅色高亮当前行
"set ruler  "显示标尺
set showcmd "输入的命令显示出来
set cmdheight=1 "命令行（状态行下）的高度设置为1
"set whichwrap+=<,>,h,l "允许backspace和光标键跨越行边界（不建议）?
"set scrolloff=3 "光标移动到buffer的顶部和底部时保持3行距离
set novisualbell "不要闪烁？？不明白
set statusline=%F%m%r%h%w\ [FORMAT=%{&ff}]\ [TYPE=%Y]\ [POS=%l,%v][%p%%]\ %{strftime(\"%d/%m/%y\ -\ %H:%M\")} "状态行显示内容
set laststatus=2 "1.启动显示状态行，2.表示总是显示状态行
set foldenable  "允许折叠
set foldmethod=manual "手动折叠
"set background=dark "背景设置成黑色
set bs=2 "make backspace behave like normal again
set nocompatible "去掉有关vi一致性模式，避免以前版本的一些bug和局限
"显示中文帮助
if version >= 603
	set helplang=cn
	set encoding=utf-8
endif
"colorscheme murphy "设置配色方案

"set fencs=utf-8,ucs-bom,shift-jis,gb18030,gbk,gb2312,cp936
"set termencoding=utf-8
set encoding=utf-8
set fileencoding=utf-8

""""""""""""""""""""""""""""""""""""""""""
"新建文件加标题
""""""""""""""""""""""""""""""""""""""""""
"新建*.sh文件时，插入文件头 
autocmd BufNewFile *.sh call ShTitleInsert()
function ShTitleInsrt()
	call setline(1,"\########################################")
	call append(line("."),"\# @Program: ".expand("%"))
	call append(line(".")+1,"\# @Description: ".expand("%"))
	call append(line(".")+2,"\# @Author: Donzy")
	call append(line(".")+3,"\# @Email: gxd.try@gmail.com")
	call append(line(".")+4,"\# @Created Time: ".strftime("%Y-%m-%d %H:%M:%S"))
	call append(line(".")+5,"\########################################")
	call append(line(".")+6,"\#!/bin/sh")
	call append(line(".")+7,"")
endfunction

"新建*.py文件时，插入文件头
autocmd BufNewFile *.py call PyTitleInsert()
function PyTitleInsert()
	call setline(1,"\# -*- coding: utf-8 -*-")
	call append(line("."),"'''")
	call append(line(".")+1," @Program: ")
	call append(line(".")+2," @Description: ")
	call append(line(".")+3," @Author: Donzy")
	call append(line(".")+4," @Email: gxd.try@gmail.com")
	call append(line(".")+5," @Created Time: ".strftime("%Y-%m-%d %H:%M:%S"))
	call append(line(".")+6," @Python release 3.5.1")
	call append(line(".")+7,"'''")
endfunction

"其他新建文件的文件头添加，后续增加
		
""""""""""""""""""""""""""""""""""""""""""
"键盘命令
""""""""""""""""""""""""""""""""""""""""""
"<leader>键设置
let mapleader=","

"复制&粘贴
set pastetoggle=<F2>
set clipboard=unnamed

"快速保存命令
"ctrl-s默认是挂起终端，需要在.bashrc中增加stty -ixon,使ctrl-s与ctrl-q失效
nnoremap <C-S> :update<CR>
vnoremap <C-S> <ESC><ESC>:update<CR>
inoremap <C-S> <ESC><ESC>:update<CR>

"新建vim的tab
":Te当前目录下，打开文件,:tabnew打开空的标签
nnoremap <leader>t :Te<CR>
nnoremap <leader>T :tabnew<CR>

"在vim的tab之间快速移动
noremap <leader>n <ESC>:tabprevious<CR>
noremap <leader>m <ESC>:tabnext<CR>

"分屏同步移动 :set scb  ,解开命令 :set scb! 注：set scb是set scrollbind简写
"在vim中打开文件 :e filename

"分屏后的切换屏幕
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

"python设置程序断点，调试点，可以结合F5按键使用
map <leader>b Oimport ipdb; ipdb.set_trace() #BREAKPOINT<C-c>

"F5运行本文件，根据后缀名
"expand("%:e")后缀名，%文件名，%:t:r主文件名，%:p文件全路径
nnoremap <F5>  :call RunProgram(expand("%:e"))<CR>
function! RunProgram(type)
	if a:type == "py"
		exec ":w"
		"可以结合ipdb使用，调试程序 ',b<F5>'
		exec "!python3 %" 
	endif
endfunction

"F8调试该文件，根据后缀名
nnoremap <F8>  :call DebugProgram(expand("%:e"))<CR>
function! DebugProgram(type)
	if a:type == "py"
		exec ":w"
		exec "!python3 -m pudb %"
	endif
endfunction	

""""""""""""""""""""""""""""""""""""""""""
filetype off

"set the runtime paty to include Vundle and initilize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

"alternatively,pass a path where Vundle should install plugins
"call vundle#('~/some/path/here')

"let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'

"Add all your plugins here(note older versions of Vundle used Bundle instead of Plugin)
"各个插件的用法可以在vim中使用 :help 命令查询

Plugin 'vim-scripts/indentpython.vim' "自动缩进插件
Plugin 'python.vim' "代码折叠，按F所有折叠，按f光标所在位置折叠，shift+e执行当前脚本
Plugin 'AutoClose' "帮助补全（）等，输入一半即可
Plugin 'tpope/vim-surround' "在两端加上、修改、删除匹配的符号如（）
Plugin 'mattn/emmet-vim' "写html、css可以让代码飞起来，原名ZenCoding
Plugin 'tomasr/molokai' "更好的配色
Plugin 'davidhalter/jedi-vim' "python补全
Plugin 'ervandew/supertab' "vim insert模式下的Tab补全
Plugin 'Lokaltog/vim-powerline' "vim加强状态栏
Plugin 'python-rope/ropevim' "python重构和code-assists等功能
Plugin 'ctrlpvim/ctrlp.vim' "regexp / Most Recently Used(MRU) files monitoring / create new files and dirs / github上了解详情
"Plugin 'Valloric/YouCompleteMe' "自动补全神器
Plugin 'scrooloose/nerdtree' "nerdTree插件，树状文件管理
Plugin 'MarcWeber/vim-addon-mw-utils' "snipmate插件依赖此插件
Plugin 'tomtom/tlib_vim' "snipmate插件依赖此插件
Plugin 'garbas/vim-snipmate' "减少写重复代码
Plugin 'majutsushi/tagbar' "类似于outline
Plugin 'terryma/vim-multiple-cursors' "类似于sublime的多光标编辑功能
Plugin 'vim-scripts/c.vim' "c/c++ IDE
Plugin 'upsuper/vim-colorschemes' "集成了很多主题，可选cobalt


"All of your Plugins must be added before the following line
call vundle#end()
filetype plugin indent on


"Enable folding
set foldmethod=syntax
set foldlevel=99


"PEP8风格的缩进，vim中Tab键相当于4个标准空格，每行代码长队不超过80字符，文件以unix格式存储，其他用户不会出现文件转换问题
au BufNewFile,BufRead *.py  set tabstop=4 | set softtabstop=4 | set shiftwidth=4 | set textwidth=79 | set expandtab | set autoindent | set fileformat=unix 

"对于全栈程序员，可以针对每种文件类型设置au命令
au BufNewFile,BufRead *.js,*.html,*.css set tabstop=4 | set softtabstop=4 | set shiftwidth=4

"不必要的空格，希望vim可以帮助我们标示出来
au BufRead,BufNewFile *.py,*.pyw,*.c,*.h match Error /\s\+$/

"设置YouCompleteMe
let g:ycm_python_binary_path='/usr/bin/python3'
let g:ycm_min_num_of_chars_for_completion=2 "最少几个基础字符开始补全
let g:ycm_min_num_identifier_candidate_chars=0 
let g:ycm_auto_tirgger=1 "0表示自动触发关闭，1表示打开
let g:ycm_filetype_whitelist={'*':1}
let g:ycm_filetype_blacklist={
			\ 'tagbar':1,
			\ 'qf':1,
			\ 'notes':1,
			\ 'markdown':1,
			\ 'unite':1,
			\ 'text':1,
			\ 'vimwiki':1,
			\ 'pandoc':1,
			\ 'infolog':1,
			\ 'mail':1
			\}
let g:ycm_filetype_specific_completion_to_disable={
			\ 'gitcommit':1
			\}


"""""""""""""""""""""""""""""""""""""""""""""""""
" 插件配置
"""""""""""""""""""""""""""""""""""""""""""""""""

"surround插件配置
":help surround可以查看具体用法
"ds/dst为删除成对符号 ， cs/cst为更改成对符号
"ysiw)为一个单词加上括号，yssB为一行加上大括号，用的应该不多
"vS 可以多行加成对符号，visual block的方式，类似的还有vgS

"emmet插件的配置
"写html比较快，各种简写，让代码飞起来，看文档

"jedi-vim插件配置，强大的python的自动补全,直接用，不折腾
let g:jedi#completions_command="<Tab>" "补全一般用Tab键
let g:jedi#goto_assignments_command="<leader>g"
let g:jedi#goto_definitions_command="<leader>d"
let g:jedi#documentation_command="<K>"
let g:jedi#rename_command="<leader>r"
let g:jedi#usages_command="<leader>m"
nnoremap <leader>pi <ESC>:Pyimport<CR>
let g:jedi#force_py_version=3

"PowerLine插件配置，使用前要设置几项，参考文档,default设置，不折腾
set t_Co=256 "256色

"roepvim插件配置，python重构
"部分功能与jedi-vim重叠，不设置

"ctrlp插件
let g:ctrlp_max_height=30
set wildignore+=*.pyc
set wildignore+=*_build/*
set wildignore+=*/coverage/*

"NERDTree插件配置
nnoremap nt <ESC>:NERDTree 
nnoremap ntb <ESC>:NERDTreeFromBookmark 
nnoremap ntt <ESC>:NERDTreeToggle 
nnoremap ntm <ESC>:NERDTreeMirror<CR>
nnoremap ntc <ESC>:NERDTreeClose<CR>
nnoremap ntf <ESC>:NERDTreeFind<CR>
nnoremap ntd <ESC>:NERDTreeCWD<CR>

"SnipMate配置设置


"tagbar配置设置
"使用tagbar需要先安装ctags，并用 ctags -R . 产生tag
filetype on  
noremap <silent><F9> <ESC><ESC>:Tagbar<CR> 

"vim-multiple-cursor配置设置
"默认设置
let g:multi_cursor_next_key='<C-n>'
let g:multi_cursor_prev_key='<C-p>'
let g:multi_cursor_skip_key='<C-x>'
let g:multi_cursor_quit_key='<ESC>'

"csupport配置设置
"使用默认设置，:help csupport查看具体用法





